# EMERGENCY: Working Dockerfile for pnpm monorepo
# docker build -f Dockerfile.emergency -t 337909762852.dkr.ecr.us-east-1.amazonaws.com/telehealth-api:latest .

FROM node:20-alpine

# Install system dependencies
RUN apk add --no-cache curl python3 make g++ libc6-compat dumb-init

WORKDIR /app

# Enable pnpm
RUN corepack enable && corepack prepare pnpm@9.6.0 --activate

# Copy workspace files
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/api/package.json ./apps/api/
COPY packages/db/package.json ./packages/db/

# Install ALL dependencies (including dev for build)
RUN pnpm install --frozen-lockfile

# Copy source code
COPY packages/db ./packages/db
COPY apps/api ./apps/api
COPY tsconfig.json ./

# Generate Prisma client
RUN cd packages/db && pnpm prisma generate

# Build application
RUN cd apps/api && pnpm build

# Clean up dev dependencies
RUN pnpm prune --prod

# Non-root user
RUN addgroup -g 1001 -S nodejs && adduser -S nodejs -u 1001
RUN chown -R nodejs:nodejs /app
USER nodejs

EXPOSE 3001

HEALTHCHECK --interval=30s --timeout=5s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:3001/health || exit 1

WORKDIR /app/apps/api
CMD ["dumb-init", "node", "dist/main.js"]

