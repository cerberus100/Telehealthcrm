# FIXED: Working Dockerfile for pnpm workspace
# docker build -f Dockerfile.fixed -t 337909762852.dkr.ecr.us-east-1.amazonaws.com/telehealth-api:latest .

FROM node:20-alpine AS base
RUN apk add --no-cache curl python3 make g++ libc6-compat openssl1.1-compat dumb-init
RUN corepack enable && corepack prepare pnpm@9.6.0 --activate

# Install dependencies
FROM base AS deps
WORKDIR /app
COPY package.json pnpm-lock.yaml pnpm-workspace.yaml ./
COPY apps/api/package.json ./apps/api/
COPY packages/db/package.json ./packages/db/
COPY packages/common ./packages/common
RUN pnpm install --frozen-lockfile

# Build stage
FROM base AS builder
WORKDIR /app
COPY --from=deps /app ./
COPY packages/db ./packages/db
COPY apps/api ./apps/api
COPY tsconfig.json ./

# Generate Prisma
RUN cd packages/db && pnpm prisma generate

# Build API
RUN cd apps/api && pnpm build

# Production
FROM node:20-alpine
RUN apk add --no-cache curl dumb-init openssl1.1-compat
WORKDIR /app

# Copy built app
COPY --from=builder /app/apps/api/dist ./dist
COPY --from=builder /app/apps/api/package.json ./
COPY --from=builder /app/node_modules ./node_modules

# Non-root user
RUN addgroup -g 1001 -S nodejs && adduser -S nodejs -u 1001
RUN chown -R nodejs:nodejs /app
USER nodejs

EXPOSE 3001
HEALTHCHECK CMD curl -f http://localhost:3001/health || exit 1
CMD ["dumb-init", "node", "dist/main.js"]

